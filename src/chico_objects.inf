

!!==============================================================================
!!
!!	EL CHICO
!!	Definición de localidades y objetos
!!
!!==============================================================================
!!
!!	Archivo:		chico_objects.inf
!!	Autor(es):		J. Francisco Martín <jfm.lisaso@gmail.com>
!!	Idioma:			ES (Castellano)
!!	Sistema:		Inform-INFSP 6
!!	Plataforma:		GLULX
!!	Versión:		0.0
!!	Fecha:			2017/09/18
!!
!!------------------------------------------------------------------------------
!!
!!	# HISTORIAL DE VERSIONES
!!
!!	0.1: 2015/02/10 Versión inicial de la Primera Parte.
!!	0.0: 2015/01/29 Inicio del desarrollo.
!!
!!------------------------------------------------------------------------------
!!
!!	This program is free software; you can redistribute it and/or modify
!!	it under the terms of the GNU General Public License as published by
!!	the Free Software Foundation; either version 2 of the License, or
!!	(at your option) any later version.
!!
!!	This program is distributed in the hope that it will be useful,
!!	but WITHOUT ANY WARRANTY; without even the implied warranty of
!!	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
!!	GNU General Public License for more details.
!!
!!	You should have received a copy of the GNU General Public License along
!!	with this program; if not, write to the Free Software Foundation, Inc.,
!!	51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Or see
!!	<http://www.gnu.org/licenses/>.
!!
!!	Copyright (C) 2015, 2017, J. Francisco Martín
!!
!!------------------------------------------------------------------------------
!!
!!	# TABLA DE CONTENIDOS
!!
!!	1)	LIMBO
!!		-	DungeonMaster
!!		-	Chico
!!		-	cielo_nocturno
!!		-	guardar_silencio
!!	2)	DESCAMPADO_1
!!		-	"cerebro"
!!		-	"cigarrillo"
!!		-	"faros"
!!		-	"pistola"
!!		-	bolsas
!!		-	coche_descampado
!!		-	cadaver_Yamileth
!!		-	sierra
!!		-	Mario_1
!!		-	conversacion_Mario_1
!!		-	cm1_op01
!!		-	cm1_op02
!!		-	cm1_op03
!!		-	cm1_op04
!!		-	cm1_op05
!!		-	cm1_op06
!!		-	cm1_op07
!!		-	Alberto_1
!!	3)	TERRAZA
!!		-	cielo_terraza
!!		-	piscina
!!		-	putas
!!		-	tumbona
!!		-	grupo
!!		-	conversacion_Mario_2
!!		-	cm2_op01
!!		-	cm2_op02
!!		-	cm2_op03
!!		-	cm2_op04
!!		-	cm2_op05
!!		-	invitados
!!		-	puertas_cristal
!!	4)	SALA_LECTURA
!!		-	estanterias
!!		-	invitados_sala_lectura
!!	5)	PASILLO
!!		-	puerta_banno
!!		-	puerta_despacho
!!	6)	BANNO
!!	7)	SALON
!!		-	barra
!!		-	dj
!!		-	invitados_salon
!!	8)	TUMULTO
!!	9)	COCHE
!!	10)	DESCAMPADO_2
!!
!!------------------------------------------------------------------------------


!!==============================================================================
!!
!!	1)	LIMBO
!!
!!------------------------------------------------------------------------------

Room	LIMBO "en algún lugar"
 with	name_f	'babia',
		name_m	'limbo' 'lugar' 'sueno' 'vacio',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
 has	male;

Object	DungeonMaster "(Dungeon Master)"
 with	!!----------------------------------------------------------------------
		!! Inicia una de las escenas del relato.
		!!
		!!	@param {integer} scene_code - Número de la escena
		!!	@returns {Object} Localidad inicial de la escena
		!!----------------------------------------------------------------------
		start_scene [ scene_code
			initial_location;
			switch (scene_code) {
			2:	!! Inicializaciones:
				SetGrammaticalInflection(FIRST_PERSON_PAST);
				self.current_scene = 2;
				initial_location = TERRAZA;
				!! Textos:
				new_line;
				HorizontalRule();
				new_line;
				O__M(self, 2);
				new_line;
			3:	!! Inicializaciones:
				SetGrammaticalInflection(FIRST_PERSON_PAST);
				self.current_scene = 3;
				initial_location = COCHE;
			4:	!! Inicializaciones:
				SetGrammaticalInflection(FIRST_PERSON_PRESENT);
				self.current_scene = 4;
				initial_location = DESCAMPADO_2;
			default:
				!! Inicializaciones:
				SetGrammaticalInflection(FIRST_PERSON_PRESENT);
				self.current_scene = 1;
				initial_location = DESCAMPADO_1;
				!! Textos:
				new_line;
				HorizontalRule();
				new_line;
				O__M(self, 1);
				new_line;
			}
			return initial_location;
		],
		!!----------------------------------------------------------------------
		!! Código de la escena actual.
		!!----------------------------------------------------------------------
		current_scene 0,
 		!!----------------------------------------------------------------------
		!! Registra el enfado de Mario con el chico
		!!----------------------------------------------------------------------
		mario_anger 0,
		!!----------------------------------------------------------------------
		!! Registra si Mario ha golpeado al chico
		!!----------------------------------------------------------------------
		_chico_hitted false,
		!!----------------------------------------------------------------------
		!! Registra si el chico ha mentido a Mario
		!!----------------------------------------------------------------------
		_chico_lied false,
		!!----------------------------------------------------------------------
		!! Código de final de la primera escena:
		!!	0)	El chico intenta cortar a Yamileth.
		!!	1)	El chico enfurece a Mario y acaba golpeado por el suelo.
		!!	2)	Mario dispara al chico en la cabeza.
		!!----------------------------------------------------------------------
		_first_scene_end 0,
;

!! Objeto protagonista
Object	Chico "chico" LIMBO
 with	name_m	'personaje' 'protagonista',
  		gender	G_MASCULINO,
		adjectives 'principal',
		description [; return O__M(self, 1); ],
 has	animate male proper;

Atrezzo	cielo_nocturno "cielo"
 with	found_in DESCAMPADO_1 DESCAMPADO_2,
		name_f	'contaminacion' 'estrella' 'luna' 'noche',
		name_m	'astro' 'cielo' 'firmamento',
		name_fp	'estrellas',
		gender	G_MASCULINO,
		adjectives
			'anaranjada' 'anaranjado' 'cerrada' 'cerrado' 'encapotada'
			'encapotado',
		description [; return O__M(self, 1); ],
		react_before [;
			Examine, Search:
				if (noun == u_obj)
					<<Examine self>>;
		],
 has	male;

ChoiceSet	guardar_silencio
 with	entry [; CreateLink("Guardar silencio", false, true); ],
		keys 'guarda' 'guardar' 'silencio',
		reply [;
			print "...^";
			new_line;
			<<Look>>;
		],
		!! El controlador de conversaciones trata el tema y lo elimina de la
		!! conversación. Al quitarle aquí la propiedad 'visited' podemos
		!! reutilizarlo y añadirlo más adelante a la misma conversación o a
		!! otra conversación diferente:
		reaction [; give self ~visited; ],
		append_choice_set false;


!!==============================================================================
!!
!!	2)	DESCAMPADO 1
!!
!!------------------------------------------------------------------------------

Outdoors	DESCAMPADO_1 "Descampado"
 with	name_f	'llanura' 'planicie',
		name_m	'descampado' 'paramo',
		gender	G_MASCULINO,
		description [;
			if (self hasnt visited) return O__M(self, 1);
			return O__M(self, 2);
		],
		before [;
			Jump:
				return O__M(self, 5);
			Listen:
				return O__M(self, 4);
			Smell:
				self.smelled = true;
				return O__M(self, 3);
		],
		!! Indica si se ha introducido la acción ##Smell en la localidad:
		smelled false,
 has	male;

Atrezzo	"cerebro" DESCAMPADO_1
 with	name_f	'cabellera' 'melena' 'sesera',
		name_fp	'seseras',
		name_m	'cabello' 'cerebro' 'pelo' 'seso',
		name_mp	'cabellos' 'pelos' 'sesos',
		gender	G_MASCULINO,
		adjectives
			'enrredada' 'enrredadas' 'enrredado' 'enrredados' 'ensangrentada'
			'ensangrentadas' 'ensangrentado' 'ensangrentados' 'negra' 'negro'
			'negros',
		before [;
			Examine, Look:
				<<Examine cadaver_Yamileth>>;
		],
 has	male;

Atrezzo	"cigarrillo" DESCAMPADO_1
 with	name_m	'cigarrillo' 'cigarro' 'pitillo' 'tabaco',
		gender	G_MASCULINO,
		adjectives 'ardiente' 'encendido' 'incandescente',
		before [;
			Examine, Look:
				<<Examine Alberto_1>>;
		],
 has	male;

Atrezzo	"faros" DESCAMPADO_1
 with	name_f	'lampara' 'linterna' 'luz',
		name_fp	'lamparas' 'linternas' 'luces',
		name_m	'faro' 'foco',
		name_mp	'faros' 'focos',
		gender	G_MASCULINO + G_PLURAL,
		adjectives
			'encendida' 'encendidas' 'encendido' 'encendidos'
			'puesta' 'puestas' 'puesto' 'puestos',
		before [;
			Examine, Look:
				<<Examine coche_descampado>>;
		],
 has	male pluralname;

Atrezzo	"pistola" DESCAMPADO_1
 with	name_f	'arma' 'pistola',
		gender	G_FEMENINO,
		adjectives 'negra',
		before [;
			Examine, Look:
				<<Examine Mario_1>>;
		],
 has	female;

Atrezzo	bolsas "bolsas de basura" DESCAMPADO_1
 with	name_f	'bolsa',
		name_fp	'bolsas',
		name_m	'saco',
		name_mp	'sacos',
		gender	G_FEMENINO + G_PLURAL,
		adjectives 'basura' 'negra' 'negras' 'negro' 'negros',
		description [; return O__M(self, 1); ],
 has	female pluralname;

Atrezzo	coche_descampado "coche" DESCAMPADO_1
 with	name_m	'audi' 'auto' 'automovil' 'capo' 'carro' 'coche' 'vehiculo',
		gender	G_MASCULINO,
		adjectives 'negro',
		description [; return O__M(self, 1); ],
 has	male;

Furniture	cadaver_Yamileth "cadáver" DESCAMPADO_1
 with	name_f	'chica' 'dama' 'difunta' 'gente' 'joven' 'machupichu' 'moza'
				'muchacha' 'muerta' 'mujer' 'persona' 'senora' 'senorita'
				'tiraflechas' 'yamileth',
		name_m	'bulto' 'cadaver' 'cuerpo' 'fiambre' 'npc' 'personaje' 'pnj',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		before [
			loc;
			SetPronoun('-la', self);
			SetPronoun('ella', self);
			Cut:
				if (second == nothing or sierra
					&& IndirectlyContains(player, sierra)) {
					O__M(self, 2);
					if (DESCAMPADO_1.smelled) { new_line; O__M(self, 3); }
					loc = DungeonMaster.start_scene(2);
					PlayerTo(loc);
					return true;
				}
				return O__M(self, 4);
			DefaultAction:
				if (self has described && IndirectlyContains(player, sierra))
					<<Cut self>>;
			Pull, Push, PushDir, Take, Turn:
				return O__M(self, 5);
		],
 has	concealed female;

Item	sierra "sierra" DESCAMPADO_1
 with	name_f	'segueta' 'serreta' 'sierra',
		name_m	'serrucho',
		gender	G_FEMENINO,
		description [;
			if (self hasnt described) return O__M(self, 1);
			return O__M(self, 2);
		],
		before [;
			DefaultAction:
				if (self has described && ~~IndirectlyContains(player, self))
					<<Take self>>;
		],
		after [; Take: return O__M(self, 3); ],
 has	concealed female;

NPC		Mario_1 "Mario" DESCAMPADO_1
 with	name_f	'gente' 'persona',
		name_m	'hombre' 'mario' 'npc' 'personaje' 'pnj',
		gender	G_MASCULINO,
		description [;
			O__M(self, 1);
			if (self hasnt described) O__M(self, 2);
			new_line;
			return true;
		],
		react_before [;
			CSETSelected, TalkTo:
				return false;
			default:
				if (conversacion_Mario_1.fixed)
					<<TalkTo self>>;
		],
		before [;
			Attack:
				return O__M(self, 6);
			DefaultAction:
				if (self.talked) <<TalkTo self>>;
			TalkTo:
				self.talked = true;
				ChoiceSetManager.start(conversacion_Mario_1);
				return true;
		],
		!! La reacciones de Mario variarán en función del enfado del personaje,
		!! que se registra a través del atributo 'anger'. Esta función se
		!! encarga de modificar el valor del enfado. Acepta un parámetro
		!! opcional. Si no se indica ninguno, el enfado de Mario se incrementa
		!! en una unidad. Si se indica, el estado de enfado toma el valor
		!! pasado como parámetro. Los valores de enfado posibles son:
		!!
		!!	0)	Estado inicial.
		!!	1)	El chico ha dicho que no puede/quiere desmembrar el cadáver.
		!!	2)	El chico ha repetido que no puede/quiere desmembrar el cadáver.
		!!	3)	El chico no ha seguido protestando después del estado #1.
		!!	4)	El chico le ha preguntado a Mario si estaba sordo.
		!!	5)	El chico ha llamado hijo de puta a Mario.
		gets_angry [ arg;
			if (arg == 0) DungeonMaster.mario_anger++;
			else DungeonMaster.mario_anger = arg;
			switch (DungeonMaster.mario_anger) {
				1:	O__M(self, 3);
				2:	O__M(self, 4);
				default: conversacion_Mario_1.fixed = true; O__M(self, 5);
			}
		],
		!! Indica si el jugador a hablado o no con Mario:
		talked false,
 has	concealed male proper;

!!------------------------------------------------------------------------------
!! Conversación con Mario 1
ChoiceSet	conversacion_Mario_1 "(conversación con Mario 1)"
with	initial_action [;
			self.add_choice(cm1_op01);
			self.add_choice(cm1_op02);
			self.add_choice(guardar_silencio);
			return O__M(self, 1);
		],
		inter_action [;
			switch (DungeonMaster.mario_anger) {
				0, 3:
					self.add_choice(guardar_silencio);
					return O__M(self, 2);
				1:
					return O__M(self, 3);
				2:
					self.add_choice(guardar_silencio);
					return O__M(self, 4);
				default:
					return O__M(self, 5);
			}
		],
		final_action [; return O__M(self, 2); ],
		!! La siguiente propiedad ofrece soporte para bloquear la conversación.
		!! Mientras la conversación se encuentre bloqueada se fuerza al usuario
		!! a continuar con ella impidiéndole abandonarla. Para implementar la
		!! funcionalidad, se debe incluir la siguiente definición de la rutina
		!! 'react_before' dentro del objeto con el que se establezca la
		!! conversación:
		!!
		!!		react_before [;
		!!			CSETSelected, TalkTo:
		!!				return false;
		!!			default:
		!!				if (conversaction_Mario_1.fixed)
		!!					<<TalkTo self>>;
		!!		],
		fixed false;

ChoiceSetItem	cm1_op01
 with	entry [; CreateLink("No puedo hacerlo"); ],
		keys 'capaz' 'hacer' 'hacerlo' 'no' 'puedo' 'soy',
		reply [; return O__M(self, 1); ],
		reaction [;
			new_line;
			Mario_1.gets_angry();
			if (DungeonMaster.mario_anger == 1) {
				!! [No pienso hacerlo / ¿Estás sordo? / Nada]
				conversacion_Mario_1.add_choice(cm1_op03);
				conversacion_Mario_1.add_choice(cm1_op04);
				conversacion_Mario_1.remove_choice(guardar_silencio);
			}
			else {
				DungeonMaster._chico_hitted = true;
				!! [Hijo de puta / Guardar silencio]
				conversacion_Mario_1.add_choice(cm1_op05);
				conversacion_Mario_1.add_choice(guardar_silencio);
				conversacion_Mario_1.remove_choice(cm1_op03);
				conversacion_Mario_1.remove_choice(cm1_op04);
			}
		],
		append_choice_set true;

ChoiceSetItem	cm1_op02
 with	entry [; CreateLink("No pienso hacerlo"); ],
		keys 'hacer' 'hacerlo' 'no' 'pienso' 'quiero',
		reply [; return O__M(self, 1); ],
		reaction [;
			new_line;
			Mario_1.gets_angry();
			if (DungeonMaster.mario_anger == 1) {
				!! [No puedo hacerlo / ¿Estás sordo? / Nada]
				conversacion_Mario_1.add_choice(cm1_op03);
				conversacion_Mario_1.add_choice(cm1_op04);
				conversacion_Mario_1.remove_choice(guardar_silencio);
			}
			else {
				DungeonMaster._chico_hitted = true;
				!! [Hijo de puta / Guardar silencio]
				conversacion_Mario_1.add_choice(cm1_op05);
				conversacion_Mario_1.add_choice(guardar_silencio);
				conversacion_Mario_1.remove_choice(cm1_op03);
				conversacion_Mario_1.remove_choice(cm1_op04);
			}
		],
		append_choice_set true;

ChoiceSetItem	cm1_op03
 with	entry [; CreateLink("¿Estás sordo?"); ],
		keys '¿estas' 'estas' 'sordo' 'sordo?' 'subnormal',
		reply [; return O__M(self, 1); ],
		reaction [;
			Mario_1.gets_angry(4);
			DungeonMaster._chico_hitted = true;
		],
		relatives	cm1_op01 cm1_op02 cm1_op04,
		subtopics	cm1_op06 cm1_op07,
		append_choice_set true;

ChoiceSetItem	cm1_op04
 with	entry [; CreateLink("Nada"); ],
		keys 'importa' 'nada' 'no',
		reply [; return O__M(self, 1); ],
		reaction [; DungeonMaster.mario_anger = 3; ],
		relatives	cm1_op01 cm1_op02 cm1_op03,
		subtopics	cm1_op05 guardar_silencio,
		append_choice_set false;

ChoiceSetItem	cm1_op05
 with	entry [; CreateLink("Hijo de puta"); ],
		keys 'hijo' 'hijoputa' 'puta',
		reply [; return O__M(self, 1); ],
		reaction [; Mario_1.gets_angry(5); ],
		relatives	guardar_silencio,
		subtopics	cm1_op06 cm1_op07,
		append_choice_set true;

ChoiceSetItem	cm1_op06
 with	entry [; CreateLink("Perdón"); ],
		keys 'perdon' 'siento',
		reply [; return O__M(self, 1); ],
		reaction [
			loc;
			DungeonMaster._first_scene_end = 1;
			loc = DungeonMaster.start_scene(2);
			PlayerTo(loc);
			return true;
		],
		relatives cm1_op07,
		append_choice_set false,
		final_choice true;

ChoiceSetItem	cm1_op07
 with	entry [; CreateLink("Que te jodan"); ],
		keys 'follen' 'jodan' 'jodete' 'no',
		reply [; return O__M(self, 1); ],
		reaction [
			loc;
			DungeonMaster._first_scene_end = 2;
			loc = DungeonMaster.start_scene(2);
			PlayerTo(loc);
			return true;
		],
		append_choice_set false,
		final_choice true;

NPC		Alberto_1 "Alberto" DESCAMPADO_1
 with	name_f	'gente' 'persona',
		name_m	'alberto' 'berto' 'hombre' 'npc' 'personaje' 'pnj',
		gender	G_MASCULINO,
		description [; return O__M(self, 1); ],
		before [;
			Attack:
				return O__M(self, 3);
			TalkTo:
				return O__M(self, 2);
		],
 has	concealed male proper;


 !!==============================================================================
 !!
 !!	3)	TERRAZA
 !!
 !!------------------------------------------------------------------------------

Outdoors	TERRAZA "Terraza"
with	name_f	'terraza',
	   name_m	'patio',
	   gender	G_FEMENINO,
	   initial [;
		   if (self hasnt visited) {
			   StartDaemon(grupo);
		   }
	   ],
	   description [;
		   O__M(self, 1);
		   if (self hasnt general) {
			   O__M(self, 2);
		   } else {
			   O__M(self, 3);
		   }
		   if (self has visited) {
			   O__M(self, 4);
		   } else {
			   new_line;
			   new_line;
			   O__M(self, 5);
		   }
		   return true;
	   ],
	   w_to [;
		   if (conversacion_Mario_2.state == 1) conversacion_Mario_2.state++;
		   if (~~keep_silent) {
			   if (grupo.talked) O__M(self, 8);
			   else {
				   if (SALA_LECTURA has visited) O__M(self, 7);
				   else O__M(self, 6);
			   }
			   new_line;
		   }
		   return SALA_LECTURA;
	   ],
	   in_to [; return self.w_to(); ],
has	female;

Atrezzo	cielo_terraza "cielo" TERRAZA
with	name_f	'atmosfera',
		name_m	'astro' 'cielo' 'dia' 'firmamento' 'sol',
		gender	G_MASCULINO,
		adjectives 'azul' 'brillante',
		description [; return O__M(self, 1); ],
		react_before [;
			Examine, Search:
				if (noun == u_obj)
					<<Examine self>>;
		],
has	male;

Atrezzo	piscina "piscina" TERRAZA
with	name_f	'piscina',
	   gender	G_FEMENINO,
	   before [;
		   Examine, Look:
			   <<Examine putas>>;
	   ],
has	female;

Atrezzo	putas "putas" TERRAZA
with	name_f	'chica' 'fulana' 'mujer' 'puta' 'teta' 'tia',
	   name_fp	'chicas' 'fulanas' 'mujeres' 'putas' 'tetas' 'tias',
	   name_m	'pecho' 'seno',
	   name_mp	'pechos' 'senos',
	   gender	G_FEMENINO + G_PLURAL,
	   adjectives 'atrezzo' 'bikini' 'florero' 'silicona',
	   !! TODO descripción Segunda Parte B
	   description [;
		   if (self hasnt described) return O__M(self, 1);
		   return O__M(self, 3);
	   ],
	   before [;
		   TalkTo:
			   return O__M(self, 4);
	   ],
has	female pluralname;

Atrezzo	tumbona "tumbona" TERRAZA
with	name_f	'tumbona',
	   name_fp	'tumbonas',
	   name_m	'asiento',
	   name_mp	'asientos',
	   gender	G_FEMENINO,
	   adjectives 'libre' 'libres' 'ocupada' 'ocupadas' 'ocupado' 'ocupados',
	   description [;
		   return O__M(self, 1);
	   ],
	   react_before [;
		   Sit:
			   if (noun == nothing) {
				   <<Sit self>>;
			   }
		   StandUp:
			   if (noun == nothing) {
				   <<StandUp self>>;
			   }
	   ],
	   before [;
		   Climb:
			   <<Sit self>>;
		   Enter:
			   <<Sit self>>;
		   Sit:
			   return O__M(self, 2);
		   StandUp:
			   if (SALA_LECTURA hasnt visited) {
				   return O__M(self, 3);
			   } else {
				   return O__M(self, 4);
			   }
	   ],
has	female;

NPC		grupo "compañeros" TERRAZA
with	name_f	'gente' 'persona',
	   name_fp	'personas',
	   name_m	'alberto' 'berto' 'david' 'hombre' 'mario',
	   name_mp	'companeros' 'grupo' 'hombres',
	   gender	G_MASCULINO + G_PLURAL,
	   article	"mis",
	   adjectives 'junto' 'piscina' 'reunido' 'reunidos',
	   description [;
		   return O__M(self, 1);
	   ],
	   react_before [;
		   CSETSelected, TalkTo:
			   return false;
		   default:
			   if (conversacion_Mario_2.fixed)
				   <<TalkTo self>>;
	   ],
	   before [;
		   DefaultAction:
			   if (self.talked) <<TalkTo self>>;
		   TalkTo:
			   StopDaemon(self);
			   self.talked = true;
			   ChoiceSetManager.start(conversacion_Mario_2);
			   return true;
	   ],
	   daemon [;
		   if (parent(self) ~= real_location) return false;
		   self.counter++;
		   switch (self.counter) {
			   3:
				   if (random(2) == 1) {
					   self.counter = 4;
					   if (parent(self) hasnt general) return O__M(self, 2);
					   O__M(self, 5);
					   <<TalkTo grupo>>;
				   }
			   4:
				   if (parent(self) hasnt general) return O__M(self, 2);
				   O__M(self, 5);
				   <<TalkTo grupo>>;
			   6:
				   if (random(3) == 1) {
					   self.counter = 8;
					   if (parent(self) hasnt general) return O__M(self, 3);
					   O__M(self, 5);
					   <<TalkTo grupo>>;
				   }
			   7:
				   if (random(2) == 1) {
					   self.counter = 8;
					   if (parent(self) hasnt general) return O__M(self, 3);
					   O__M(self, 5);
					   <<TalkTo grupo>>;
				   }
			   8:
				   if (parent(self) hasnt general) return O__M(self, 3);
				   O__M(self, 5);
				   <<TalkTo grupo>>;
			   11:
				   if (random(3) == 1) {
					   if (parent(self) hasnt general) O__M(self, 4);
					   else O__M(self, 5);
					   <<TalkTo grupo>>;
				   }
			   12:
				   if (random(2) == 1) {
					   if (parent(self) hasnt general) O__M(self, 4);
					   else O__M(self, 5);
					   <<TalkTo grupo>>;
				   }
			   13:
				   if (parent(self) hasnt general) O__M(self, 4);
				   else O__M(self, 5);
				   <<TalkTo grupo>>;
		   }

	   ],
	   counter 0,
	   !! Indica si el interlector ha hablado o no con el grupo:
	   talked false,
has	concealed male pluralname;

!!------------------------------------------------------------------------------
!! Conversación con Mario 2
ChoiceSet	conversacion_Mario_2 "(conversación con Mario 2)"
with	initial_action [;
		   self.fixed = true;
		   self.add_choice(cm2_op01);
		   self.add_choice(cm2_op02);
		   return O__M(self, 1);
	   ],
	   inter_action [;
		   switch (self.state) {
			   0:
				   return O__M(self, 2);
			   1:
				   self.state++;
				   self.add_choice(guardar_silencio);
				   return O__M(self, 3);
			   2:
				   self.state++;
				   self.fixed = true;
				   self.remove_choice(guardar_silencio);
				   self.add_choice(cm2_op04);
				   return O__M(self, 4);
			   3:
				   return O__M(self, 5);
			   default:
				   return O__M(self, 6);
		   }
	   ],
	   state 0,
	   fixed false;

ChoiceSetItem	cm2_op01
with	entry [; CreateLink("Vivo con mi madre"); ],
	   keys 'vivo' 'con' 'madre',
	   reply [; return O__M(self, 1); ],
	   reaction [;
		   DungeonMaster._chico_lied = false;
		   conversacion_Mario_2.fixed = false;
		   conversacion_Mario_2.state++;
		   conversacion_Mario_2.add_choice(guardar_silencio);
		   new_line;
		   return O__M(conversacion_Mario_2, 7);
	   ],
	   relatives	cm2_op02,
	   subtopics	cm2_op03,
	   append_choice_set true;

ChoiceSetItem	cm2_op02
with	entry [; CreateLink("Mentir", false, true); ],
	   keys 'mentir' 'miente',
	   reply [; return O__M(self, 1); ],
	   reaction [;
		   DungeonMaster._chico_lied = true;
		   conversacion_Mario_2.fixed = false;
		   conversacion_Mario_2.state++;
		   conversacion_Mario_2.add_choice(guardar_silencio);
		   new_line;
		   return O__M(conversacion_Mario_2, 7);
	   ],
	   relatives	cm2_op01,
	   subtopics	cm2_op03,
	   append_choice_set true;

ChoiceSetItem	cm2_op03
with	entry [; CreateLink("No soy el recadero de nadie"); ],
	   keys 'nadie' 'no' 'recadero' 'soy',
	   reply [; return O__M(self, 1); ],
	   reaction [;
		   conversacion_Mario_2.fixed = true;
		   conversacion_Mario_2.state = 4;
		   conversacion_Mario_2.remove_choice(guardar_silencio);
	   ],
	   subtopics	cm2_op04 cm2_op05,
	   append_choice_set true;

ChoiceSetItem	cm2_op04
with	entry [; CreateLink("Si ya voy", "Si, ya voy"); ],
	   keys 'afirmar' 'si' 'voy',
	   reply [; return O__M(self, 1); ],
	   reaction [;
		   conversacion_Mario_2.fixed = false;
		   give grupo general;
		   new_line;
		   PlayerTo(SALA_LECTURA);
		   return true;
	   ],
	   relatives	cm2_op05,
	   append_choice_set false;

ChoiceSetItem	cm2_op05
with	entry [; CreateLink("No"); ],
	   keys 'negar' 'no',
	   reply [; return O__M(self, 1); ],
	   reaction [;
		   conversacion_Mario_2.fixed = false;
		   give grupo general;
		   new_line;
		   PlayerTo(SALA_LECTURA);
		   return true;
	   ],
	   relatives	cm2_op04,
	   append_choice_set false;

Atrezzo	invitados "invitados"
with	found_in TERRAZA SALA_LECTURA SALON,
	   name_f	'gente',
	   name_fp	'personas',
	   name_mp	'invitados',
	   gender	G_MASCULINO + G_PLURAL,
	   description [;
		   if (self hasnt described) {
			   O__M(self, 1);
			   if (real_location == TERRAZA) O__M(self, 2);
			   new_line;
			   return true;
		   }
	   ],
has	male pluralname;

Furniture	puertas_cristal "puertas de cristal"
with	found_in TERRAZA SALA_LECTURA,
	   name_f	'entrada' 'puerta' 'salida',
	   name_fp	'puertas',
	   gender	G_FEMENINO + G_PLURAL,
	   adjectives 'cristal',
	   description [;
		   if (self in TERRAZA) return O__M(self, 1);
		   else return O__M(self, 2);
	   ],
	   before [;
		   DefaultAction:
			   <<Enter self>>;
		   Enter:
			   if (self in TERRAZA) <<Go w_obj>>;
			   else <<Go e_obj>>;
	   ],
has	door female pluralname;


!!==============================================================================
!!
!!	4)	SALA_LECTURA
!!
!!------------------------------------------------------------------------------

Indoors	SALA_LECTURA "Sala de lectura"
with	name_f	'habitacion' 'sala',
	   name_m	'cuarto',
	   adjectives	'lectura' 'pequena' 'pequeno',
	   gender	G_FEMENINO,
	   initial [; if (self hasnt visited) give TERRAZA general; ],
	   description [;
		   return O__M(self, 1);
	   ],
	   n_to	PASILLO,
	   e_to [;
		   if (grupo hasnt general) return TERRAZA;
		   else return O__M(self, 2);
	   ],
	   w_to	SALON,
	   out_to [; return self.e_to(); ],
has	female;

Atrezzo	-> estanterias "estanterías"
with	name_f	'balda' 'estanteria',
	   name_fp	'baldas' 'estanterias',
	   name_m	'estante' 'libro',
	   name_mp	'estantes' 'libros',
	   gender	G_FEMENINO + G_PLURAL,
	   description [; return O__M(self, 1); ],
has	female pluralname;

Atrezzo	-> invitados_sala_lectura "invitados"
with	name_f	'gente',
	   name_fp	'personas',
	   name_mp	'invitados',
	   gender	G_MASCULINO + G_PLURAL,
	   description [;
		   if (invitados has described) return O__M(self, 1);
		   else return O__M(invitados, 1);
	   ],
	   before [;
		   Listen:
			   <<Listen>>;
		   TalkTo:
			   if (self.talkTo_flag) return O__M(self, 2);
			   else {
				   self.talkTo_flag = true;
				   return O__M(self, 3);
			   }
	   ],
	   talkTo_flag false,
has	male pluralname;


!!==============================================================================
!!
!!	5)	PASILLO
!!
!!------------------------------------------------------------------------------

Indoors	PASILLO "Pasillo"
with	name_m	'corredor' 'pasillo',
	   gender	G_MASCULINO,
	   description [;
		   return O__M(self, 1);
	   ],
	   s_to	SALA_LECTURA,
	   e_to	BANNO,
has	male;

Furniture	-> puerta_banno "puerta del baño"
with	name_m	'bano',
	   name_f	'puerta' 'puertas',
	   gender	G_FEMENINO,
	   adjectives 'abierta' 'cerrada',
	   before [;
		   DefaultAction:
			   <<Enter self>>;
		   Enter:
			   <<Go e_obj>>;
	   ],
has	door female;

Furniture	-> puerta_despacho "puerta del despacho"
with	name_m	'despacho',
	   name_f	'puerta' 'puertas',
	   gender	G_FEMENINO,
	   adjectives 'abierta' 'cerrada',
has	female;


!!==============================================================================
!!
!!	6)	BANNO
!!
!!------------------------------------------------------------------------------

Indoors	BANNO "Baño"
with	name_m	'aseo' 'bano',
	   gender	G_MASCULINO,
	   description [;
		   return O__M(self, 1);
	   ],
	   w_to	PASILLO,
has	male;


!!==============================================================================
!!
!!	7)	SALON
!!
!!------------------------------------------------------------------------------

Indoors	SALON "Salón"
with	name_f	'estancia' 'habitacion' 'sala',
	   name_m	'cuarto' 'salon',
	   gender	G_MASCULINO,
	   description [;
		   if (self hasnt general) return O__M(self, 2);
		   give self ~general;
		   return O__M(self, 1);
	   ],
	   after [; Go: if (noun == w_obj) give self general; ],
	   e_to	SALA_LECTURA,
has	male;

Atrezzo	-> camarero "camarero"
with	name_f	'gente' 'persona',
	   name_m	'camarero' 'hombre',
	   gender	G_MASCULINO,
	   description [; return O__M(self, 1); ],
has	male;

Atrezzo	-> dj "dj"
with	name_f	'gente' 'persona',
	   name_m	'dj' 'disc' 'discjockey' 'jockey' 'pinchadiscos',
	   gender	G_MASCULINO,
	   description [; return O__M(self, 1); ],
has	male;

Atrezzo	-> invitados_salon "invitados"
with	name_f	'gente' 'persona',
	   name_fp	'personas',
	   name_m	'invitado',
	   name_mp	'invitados',
	   gender	G_MASCULINO + G_PLURAL,
	   description [; return O__M(self, 1); ],
has	male pluralname;


!!==============================================================================
!!
!!	8)	TUMULTO
!!
!!------------------------------------------------------------------------------

Indoors	TUMULTO "Tumulto"
 with	name_m	'tumulto',
 		gender	G_MASCULINO,
 has	male;


!!==============================================================================
!!
!!	9)	COCHE
!!
!!------------------------------------------------------------------------------

 Indoors	COCHE "Coche"
  with	name_m	'coche',
  		gender	G_MASCULINO,
  has	male;


!!==============================================================================
!!
!!	10)	DESCAMPADO_2
!!
!!------------------------------------------------------------------------------

Outdoors	DESCAMPADO_2 "Descampado"
 with	name_m	'descampado',
		gender	G_MASCULINO,
		initial [; if (self hasnt visited) {
			!! Establece la flexión gramatical:
			SetGrammaticalInflection(FIRST_PERSON_PRESENT);
			return true;
		}],
 has	male;
